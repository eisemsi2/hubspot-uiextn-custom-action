import type { ReactNode } from 'react';
import type { RemoteFragment } from '@remote-ui/core';
import type { AllDistances } from '../types';
/**
 * @ignore
 * @experimental do not use in production
 */
interface BaseLayout {
    fullWidth?: boolean;
    fullHeight?: boolean;
}
/**
 * @ignore
 * @experimental do not use in production
 */
export type FlexJustify = 'center' | 'end' | 'start' | 'around' | 'between';
/**
 * @ignore
 * @experimental do not use in production
 */
export type FlexAlign = 'start' | 'center' | 'baseline' | 'end' | 'stretch';
/**
 * @ignore
 * @experimental do not use in production
 */
export interface InlineProps extends BaseLayout {
    justify?: FlexJustify;
    align?: FlexAlign;
    gap?: AllDistances;
    children?: ReactNode;
}
/**
 * @ignore
 * @experimental do not use in production
 */
export interface Stack2Props extends BaseLayout {
    align?: FlexAlign;
    gap?: AllDistances;
    children?: ReactNode;
}
/**
 * @ignore
 * @experimental do not use in production
 */
export interface CenterProps extends BaseLayout {
    maxContentSize?: number | string;
    gutter?: AllDistances;
    children?: ReactNode;
}
/**
 * @ignore
 * @experimental
 */
export interface MediaObjectProps {
    align?: 'start' | 'center' | 'baseline' | 'end' | 'stretch';
    spacing?: 'none' | 'extra-small' | 'small' | 'medium' | 'large' | 'extra-large';
    children?: ReactNode;
    itemLeft?: RemoteFragment;
    itemRight?: RemoteFragment;
}
/**
 * @ignore
 * @experimental do not use in production
 */
export interface SimpleGridProps extends BaseLayout {
    minColumnWidth: number | string;
    gap?: AllDistances;
    children?: ReactNode;
}
export interface GridProps {
    justify?: FlexJustify;
    align?: FlexAlign;
    gap?: AllDistances;
    size?: number;
    children?: ReactNode;
}
export interface GridItemProps {
    size?: number;
    children?: ReactNode;
    offset?: number;
}
export {};
